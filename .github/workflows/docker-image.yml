name: Build and Push Docker Image to ACR

on:
  push:
    branches:
      - main  # Triggers the action when pushing to the main branch

jobs:
  build-and-push:
    runs-on: ubuntu-latest  # Runs on GitHub cloud

    steps:
      - name: Checkout Repository
        uses: actions/checkout@v3

      - name: Log in to Azure using Service Principal
        run: |
          az login --service-principal -u ${{ secrets.AZURE_CLIENT_ID }} -p ${{ secrets.AZURE_CLIENT_SECRET }} --tenant ${{ secrets.AZURE_TENANT_ID }}

      - name: Log in to Azure Container Registry
        run: |
          echo "${{ secrets.ACR_PASSWORD }}" | docker login ${{ secrets.AZURE_ACR_NAME }}.azurecr.io -u ${{ secrets.ACR_USERNAME }} --password-stdin

      - name: Check if Repository Exists in ACR
        run: |
          # Check if the repository exists
          REPO_EXISTS=$(az acr repository show --name ${{ secrets.AZURE_ACR_NAME }} --repository ethical-web-scraper --output tsv 2>/dev/null)

          if [ -n "$REPO_EXISTS" ]; then
            echo "Repository exists. Proceeding with tag listing and image deletion."
          else
            echo "Repository 'ethical-web-scraper' does not exist. Skipping tag deletion."
          fi

      - name: List Existing Tags in ACR
        run: |
          # List all tags in the ACR repository
          az acr repository show-tags --name ${{ secrets.AZURE_ACR_NAME }} --repository ethical-web-scraper

      - name: Delete Untagged Images (Manifests)
        run: |
          echo "Deleting untagged images (manifests)..."
          
          # List all image manifests (including untagged ones)
          IMAGES=$(az acr repository show-manifests --name ${{ secrets.AZURE_ACR_NAME }} --repository ethical-web-scraper --output tsv)

          # Loop through and delete untagged images (manifests)
          for IMAGE in $IMAGES; do
            # Check if the image is a valid manifest digest (must match a sha256 pattern)
            if [[ "$IMAGE" =~ ^sha256:[a-f0-9]{64}$ ]]; then
              # Skip images that are tagged 'latest'
              if [[ "$IMAGE" != *"latest"* ]]; then
                echo "Deleting untagged image: $IMAGE"
                az acr repository delete --name ${{ secrets.AZURE_ACR_NAME }} --image "ethical-web-scraper@$IMAGE" --yes
              fi
            else
              echo "Skipping invalid manifest: $IMAGE"
            fi
          done

      - name: Build Docker Image
        run: docker build -t ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/ethical-web-scraper:latest .

      - name: Push Docker Image to ACR
        run: docker push ${{ secrets.AZURE_ACR_NAME }}.azurecr.io/ethical-web-scraper:latest
